//
//  NNSizeView.m
//  NNMall
//
//  Created by shaoxu on 15/11/16.
//  Copyright © 2015年 shaoxu. All rights reserved.
//

#import "NNSizeView.h"
#import <SDWebImage/UIImageView+WebCache.h>
#import "HJCAjustNumButton.h"
#import "NNSizeCollect.h"
#define kSizeHeight 60
#define kImageHeight 80
#define kOx 15

@interface NNSizeView ()<UITableViewDataSource,UITableViewDelegate,UICollectionViewDataSource,UICollectionViewDelegate>
{
    UIView      *m_sizeView;
    UIImageView *m_proImageView;
    UILabel     *m_proNameLbl;
    UILabel     *m_proPriceLbl;
    UILabel     *m_proTypeLbl;
    UITableView *m_sizeTableView;
    UIButton    *m_trueBtn;
    UICollectionView *m_sizeCollectView;
    NSMutableArray *m_keyArray; //存放key值
    
    ProductModel *m_sizePM;
    NSMutableArray *m_sizeArray;    //存放尺寸
    NSMutableDictionary *m_btnDic;  //存放尺寸按钮
}
@property (nonatomic,strong) UIView *p_sizeView;
@property (nonatomic,strong) UIImageView *p_proImageView;
@property (nonatomic,strong) UILabel *p_proNameLbl;
@property (nonatomic,strong) UILabel *p_proPriceLbl;
@property (nonatomic,strong) UILabel *p_proTypeLbl;
@property (nonatomic,strong) UITableView *p_sizeTableView;
@property (nonatomic,strong) UIButton *p_trueBtn;
@property (nonatomic,strong) NSMutableArray *p_keyArray;

@property (nonatomic,strong) ProductModel *p_sizePM;
@property (nonatomic,strong) NSMutableArray *p_sizeArray;
@property (nonatomic,strong) NSMutableDictionary *p_btnDic;
@property (nonatomic,strong) UICollectionView *p_sizeCollectView;
@end

@implementation NNSizeView
@synthesize p_sizeView = m_sizeView;
@synthesize p_proImageView = m_proImageView;
@synthesize p_proNameLbl = m_proNameLbl;
@synthesize p_proPriceLbl = m_proPriceLbl;
@synthesize p_proTypeLbl = m_proTypeLbl;
@synthesize p_sizeTableView = m_sizeTableView;
@synthesize p_trueBtn = m_trueBtn;
@synthesize p_keyArray = m_keyArray;
@synthesize p_sizePM = m_sizePM;
@synthesize p_sizeArray = m_sizeArray;
@synthesize p_btnDic = m_btnDic;
@synthesize p_sizeCollectView = m_sizeCollectView;
@synthesize p_nnSizeDelegate = m_nnSizeDelegate;

-(void)dealloc
{

}

-(id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self createSizeView:frame];
    }
    return self;
}

-(void)createSizeView:(CGRect)frame
{
    //1.设置显示区
    self.p_sizeView = [[UIView alloc]initWithFrame:CGRectMake(0, frame.size.height, kMainScreen_Width, 2*frame.size.height/3.0f)];
    m_sizeView.backgroundColor = [UIColor whiteColor];
    [self addSubview:m_sizeView];
    //2.商品对照数据视图
    self.p_proImageView = [[UIImageView alloc]initWithFrame:CGRectMake(10, 10, kImageHeight, kImageHeight)];
    m_proImageView.backgroundColor = LGraycolor;
    [m_sizeView addSubview:m_proImageView];
    self.p_proNameLbl = [[UILabel alloc]initWithFrame:CGRectMake(kImageHeight+20, 10, kMainScreen_Width-kImageHeight-30, 44)];
    m_proNameLbl.font = [NNCommonDeal getFont:16];
    m_proNameLbl.numberOfLines = 0;
    [m_sizeView addSubview:m_proNameLbl];
    self.p_proPriceLbl = [[UILabel alloc]initWithFrame:CGRectMake(kImageHeight+20, kImageHeight-12, kMainScreen_Width-kImageHeight-30, 22)];
    m_proPriceLbl.font = [NNCommonDeal getFont:16];
    m_proPriceLbl.textColor = Redcolor;
    [m_sizeView addSubview:m_proPriceLbl];
    //3.规格选择(collectionview)
    UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc] init];
//    flowLayout.itemSize = self.frame.size;
//    flowLayout.minimumLineSpacing = 0;
    flowLayout.scrollDirection = UICollectionViewScrollDirectionVertical;
    
    self.p_sizeCollectView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, kImageHeight+20, kMainScreen_Width, m_sizeView.frame.size.height-kImageHeight-70) collectionViewLayout:flowLayout];
    m_sizeCollectView.backgroundColor = [UIColor whiteColor];
//    m_sizeCollectView.pagingEnabled = YES;
    m_sizeCollectView.showsHorizontalScrollIndicator = NO;
    m_sizeCollectView.showsVerticalScrollIndicator = NO;
    [m_sizeCollectView registerClass:[NNSizeCollect class] forCellWithReuseIdentifier:@"SizeCollect"];
    m_sizeCollectView.dataSource = self;
    m_sizeCollectView.delegate = self;
    [m_sizeView addSubview:m_sizeCollectView];

    //4.确定按钮
    self.p_trueBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    m_trueBtn.frame = CGRectMake(0, m_sizeView.frame.size.height-50, kMainScreen_Width, 50);
    m_trueBtn.backgroundColor = Redcolor;
    [m_trueBtn setTitle:@"确定" forState:UIControlStateNormal];
    [m_trueBtn addTarget:self action:@selector(trueBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [m_sizeView addSubview:m_trueBtn];
    
}

-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    UITouch *touch = [touches anyObject];
    CGPoint pt = [touch locationInView:self];
    
    if (!CGRectContainsPoint([m_sizeView frame], pt)) {
        [UIView animateWithDuration:0.2f animations:^{
            m_sizeView.frame = CGRectMake(0, self.frame.size.height, kMainScreen_Width, 2*self.frame.size.height/3.0f);
        } completion:^(BOOL finished) {
            if (m_nnSizeDelegate && [m_nnSizeDelegate respondsToSelector:@selector(hideSize:)]) {
                [m_nnSizeDelegate hideSize:nil];
            }
        }];
    }
}

#pragma mark - Data

-(void)refreshSizeData:(ProductModel *)productM
{
    self.p_sizePM = productM;
    [m_proImageView sd_setImageWithURL:[NSURL URLWithString:productM.m_productImgUrl] placeholderImage:nil];
    m_proNameLbl.text = productM.m_productName;
    if (productM.m_currentSizeArr) {
        m_proPriceLbl.text = [self getSelectSizePrice];
    }
    else{
        m_proPriceLbl.text = [NSString stringWithFormat:@"¥%@",productM.m_productCost];
    }
    [UIView animateWithDuration:0.2f animations:^{
        m_sizeView.frame = CGRectMake(0, self.frame.size.height/3.0f, kMainScreen_Width, 2*self.frame.size.height/3.0f);
    }];
    self.p_keyArray = [NSMutableArray arrayWithArray:productM.m_sizeDictionary.allKeys];
    [m_sizeCollectView reloadData];
}

-(void)trueBtnClick:(id)sender
{
    for (NSDictionary *dic in m_sizePM.m_currentSizeArr) {
        NSString *sizeId = [dic objectForKey:@"id"];
        m_sizePM.m_currentId = sizeId;
    }
    
    //1.关闭尺寸选择
    if (m_nnSizeDelegate && [m_nnSizeDelegate respondsToSelector:@selector(chooseProductSize:)]) {
        [m_nnSizeDelegate chooseProductSize:m_sizePM];
    }
}

#pragma mark - Private methods

-(UIButton *)getTitle:(NSString *)title andFrame:(CGRect)frame andTag:(NSIndexPath *)indexPath
{
    UIButton *sizeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    sizeBtn.frame = frame;
    sizeBtn.titleLabel.font = [NNCommonDeal getFont:12];
    sizeBtn.tag = indexPath.section*100+indexPath.item;
    [sizeBtn setTitle:title forState:UIControlStateNormal];
    [sizeBtn setTitle:title forState:UIControlStateSelected];
    [sizeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [sizeBtn setBackgroundColor:Graycolor];
    sizeBtn.userInteractionEnabled = NO;
    sizeBtn.layer.masksToBounds = YES;
    sizeBtn.layer.cornerRadius = 5;
    return sizeBtn;
}

-(HJCAjustNumButton *)getNumberCount:(CGRect)frame
{
    HJCAjustNumButton *btn = [[HJCAjustNumButton alloc] init];
    btn.frame = CGRectMake(67, 15, 118 , 30);
    btn.lineColor = Linecolor;
    btn.callBack = ^(NSString *currentNum){
        if (currentNum.integerValue > m_sizePM.m_currentBuyCount) {
            m_sizePM.m_currentBuyCount++;
        }
        else if (currentNum.integerValue < m_sizePM.m_currentBuyCount){
            m_sizePM.m_currentBuyCount--;
        }
    };
    if (m_sizePM.m_currentBuyCount>0) {
        btn.currentNum = [NSString stringWithFormat:@"%ld",(long)m_sizePM.m_currentBuyCount];
    }
    else{
        btn.currentNum = @"1";
    }
    return btn;
}

-(NSString *)getSelectSizePrice
{
    //计算价格区间
    double minPrice = 0.0f;
    double maxPrice = 0.0f;
    NSMutableArray *priceArr = [[NSMutableArray alloc]init];
    for (NSDictionary *dic in m_sizePM.m_currentSizeArr) {
        NSString *price = [dic objectForKey:@"specPrice"];
        minPrice = price.doubleValue;
        [priceArr addObject:price];
    }
    
    double tempPrice = 0.0f;
    for (NSString *price in priceArr) {
        tempPrice = price.doubleValue;
        if (maxPrice<=tempPrice) {
            maxPrice = tempPrice;
        }
        if (minPrice>=tempPrice) {
            minPrice = tempPrice;
        }
    }
    
    if (maxPrice == minPrice) {
        return [NSString stringWithFormat:@"¥%.1f",minPrice];
    }
    else{
        return [NSString stringWithFormat:@"¥%.1f-¥%.1f",minPrice,maxPrice];
    }
}


#pragma mark - collectionView delegate
//设置分区
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    
    return m_keyArray.count;
}

//每个分区上的元素个数
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    NSString *key = [m_keyArray objectAtIndex:section];
    return [[m_sizePM.m_sizeDictionary objectForKey:key]count];
}

//设置元素内容
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *SizeCollect = @"SizeCollect";
    NNSizeCollect *cell = (NNSizeCollect *)[collectionView dequeueReusableCellWithReuseIdentifier:SizeCollect forIndexPath:indexPath];
    [cell sizeToFit];
    cell.layer.borderColor = Collectcolor.CGColor;
    //绘制规格按钮
    NSString *key = [m_keyArray objectAtIndex:indexPath.section];
    NSArray *titleArr = [m_sizePM.m_sizeDictionary objectForKey:key];
    cell.tag = indexPath.section*100+indexPath.item;
    [cell refreshSizeCollect:[titleArr objectAtIndex:indexPath.item]];


    return cell;
}

#pragma mark --UICollectionViewDelegateFlowLayout
//定义每个UICollectionView 的大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *key = [m_keyArray objectAtIndex:indexPath.section];
    NSArray *titleArr = [m_sizePM.m_sizeDictionary objectForKey:key];
    CGSize titleSize = [[titleArr objectAtIndex:indexPath.item] boundingRectWithSize:CGSizeMake(kMainScreen_Width-30, MAXFLOAT) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:12]} context:nil].size;
    return CGSizeMake(titleSize.width+15, 30);
}

//定义每个UICollectionView 的 margin
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(5, 5, 5, 5);
}

- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section
{
    return 10;
}

- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section
{
    return 1;
}

////创建尺寸视图
//-(void)createSizeChooseView:(UIView *)chooseView andKey:(NSString *)key
//{
//    NSArray *sizeArr = [m_sizePM.m_sizeDictionary objectForKey:key];
//    //1.创建标题
//    UILabel *colorLbl = [[UILabel alloc]initWithFrame:CGRectMake(kOx, 14, 32, 22)];
//    colorLbl.font = [NNCommonDeal getFont:14];
//    [chooseView addSubview:colorLbl];
//    //2.创建尺寸按钮
//    NSMutableArray *btnArr = [[NSMutableArray alloc]init];
//    for (int i=0; i<sizeArr.count; i++) {
//        NSString *title = [sizeArr objectAtIndex:i];
//        UIButton *sizeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
//        sizeBtn.frame = CGRectMake(67+i%4*78, 10+i/4*36, 68, 30);
//        sizeBtn.titleLabel.font = [NNCommonDeal getFont:12];
//        [sizeBtn setTitle:title forState:UIControlStateNormal];
//        [sizeBtn setTitle:title forState:UIControlStateSelected];
//        [sizeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
//        [sizeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
//        if ([key isEqualToString:@"color"]) {
//            sizeBtn.tag = 100+i;
//            if ([m_sizePM.m_currentColor isEqualToString:title]) {
//                [sizeBtn setBackgroundColor:Redcolor];
//                sizeBtn.selected = YES;
//            }else{
//                [sizeBtn setBackgroundColor:Graycolor];
//                sizeBtn.selected = NO;
//            }
//        }
//        else if ([key isEqualToString:@"size"]){
//            sizeBtn.tag = i;
//            if ([m_sizePM.m_currentSize isEqualToString:title]) {
//                [sizeBtn setBackgroundColor:Redcolor];
//                sizeBtn.selected = YES;
//            }else{
//                [sizeBtn setBackgroundColor:Graycolor];
//                sizeBtn.selected = NO;
//            }
//        }
//        [sizeBtn addTarget:self action:@selector(sizeSelect:) forControlEvents:UIControlEventTouchUpInside];
//        sizeBtn.layer.masksToBounds = YES;
//        sizeBtn.layer.cornerRadius = 5;
//        [chooseView addSubview:sizeBtn];
//        [btnArr addObject:sizeBtn];
//    }
//    
//    if ([key isEqualToString:@"color"]) {
//        colorLbl.text = @"颜色";
//        [m_btnDic setObject:btnArr forKey:@"colorBtn"];
//    }
//    else if ([key isEqualToString:@"size"]){
//        colorLbl.text = @"尺码";
//        [m_btnDic setObject:btnArr forKey:@"sizeBtn"];
//    }
//    //可扩展
//}
//
//
//
//#pragma mark - 规格事件
////按钮点击
//-(void)sizeSelect:(id)sender
//{
//    UIButton *btn = (UIButton *)sender;
//    btn.selected = !btn.selected;
//
//    if (btn.selected) {
//        if (btn.tag>=100) {
//            m_sizePM.m_currentColor = btn.titleLabel.text;
//            //切换对应尺码(根据tag来分辨点击规格类型)
//            [self judgeSelectBtnSizes:@"color" andTitle:btn.titleLabel.text];
//        }
//        else if(btn.tag>=0 && btn.tag<100){
//            m_sizePM.m_currentSize = btn.titleLabel.text;
//            //切换对应尺码(根据tag来分辨点击规格类型)
//            [self judgeSelectBtnSizes:@"size" andTitle:btn.titleLabel.text];
//        }
//        [btn setBackgroundColor:Redcolor];
//        [self refreshProdutPrice];//刷新价格
//    }
//    else{
//        if (btn.tag>=100) {
//            m_sizePM.m_currentColor = @"";
//            [self resetSizeBtn];
//            
//        }
//        else if(btn.tag>=0 && btn.tag<100){
//            m_sizePM.m_currentSize = @"";
//            
//        }
//        [btn setBackgroundColor:Graycolor];
//    }
//    [self reloadSizeBtn:btn];//刷新其他按钮
//    
//}
//
////刷新其他按钮，致为未选
//-(void)reloadSizeBtn:(UIButton *)btn
//{
//    NSMutableArray *list = [[NSMutableArray alloc]init];
//    if (btn.tag>=100) {
//        [list addObjectsFromArray:[m_btnDic objectForKey:@"colorBtn"]];
//    }
//    else if(btn.tag>=0 && btn.tag<100){
//        [list addObjectsFromArray:[m_btnDic objectForKey:@"sizeBtn"]];
//    }
//    
//    for (UIButton *button in list) {
//        if (button.tag != btn.tag) {
//            button.selected = NO;
//            [button setBackgroundColor:Graycolor];
//        }
//    }
//}
//
////根据选中颜色按钮，对可选尺码的按钮进行enable设置
//-(void)judgeSelectBtnSizes:(NSString *)key andTitle:(NSString *)btnTitle
//{
//    //1.查询遍历:color/其他
//    if ([key isEqualToString:@"color"]) {
//        m_sizePM.m_currentSizeArr = [[NSMutableArray alloc]init];
//        for (NSDictionary *dic in m_sizePM.m_sizeListArr) {
//            NSString *colorStr = [dic objectForKey:@"specColor"];
//            NSString *sizeStr = [dic objectForKey:@"specSize"];
//            if ([colorStr isEqualToString:btnTitle]) {
//                [m_sizePM.m_currentSizeArr addObject:dic];
//                [self haveSize:sizeStr andEnable:YES];
//            }
//            else{
//                [self haveSize:sizeStr andEnable:NO];
//            }
//        }
//    }
//    else if ([key isEqualToString:@"size"]){
//        //2.查询子规格数据
//        if (m_sizePM.m_currentSizeArr) {
//            [m_sizePM.m_currentSizeArr removeAllObjects];
//        }
//        
//        for (NSDictionary *dic in m_sizePM.m_sizeListArr) {
//            NSString *sizeStr = [dic objectForKey:@"specSize"];
//            if ([sizeStr isEqualToString:btnTitle]) {
//                [m_sizePM.m_currentSizeArr addObject:dic];
//            }
//        }
//    }
//    else{
//    
//    }
//}
//
//-(void)haveSize:(NSString *)str andEnable:(BOOL)isEnable
//{
//    NSMutableArray *list = [m_btnDic objectForKey:@"sizeBtn"];
//    for (UIButton *btn in list) {
//        if ([btn.titleLabel.text isEqualToString:str]) {
//            if (isEnable) {
//                btn.enabled = YES;
//                btn.alpha = 1.0f;
//            }
//            else{
//                btn.enabled = NO;
//                btn.alpha = 0.5f;
//                [btn setBackgroundColor:Graycolor];
//                btn.selected = NO;
//            }
//        }
//    }
//}
//
//-(void)resetSizeBtn
//{
//    NSMutableArray *list = [m_btnDic objectForKey:@"sizeBtn"];
//    for (UIButton *btn in list) {
//        btn.enabled = YES;
//        btn.alpha = 1.0f;
//    }
//}
//
//#pragma mark - price
//
//-(void)refreshProdutPrice
//{
//    if (m_sizePM.m_currentSizeArr) {
//        m_proPriceLbl.text = [self getSelectSizePrice];
//    }
//    else{
//        m_proPriceLbl.text = [NSString stringWithFormat:@"¥%@",m_sizePM.m_productCost];
//    }
//}
//
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
