//
//  NNSizeView.m
//  NNMall
//
//  Created by shaoxu on 15/11/16.
//  Copyright © 2015年 shaoxu. All rights reserved.
//

#import "NNSizeView.h"
#import <SDWebImage/UIImageView+WebCache.h>

#define kSizeHeight 60
#define kImageHeight 80

@interface NNSizeView ()<UITableViewDataSource,UITableViewDelegate>
{
    UIView      *m_sizeView;
    UIImageView *m_proImageView;
    UILabel     *m_proNameLbl;
    UILabel     *m_proPriceLbl;
    UILabel     *m_proTypeLbl;
    UITableView *m_sizeTableView;
    UIButton    *m_trueBtn;
    
    ProductModel *m_sizePM;
    NSMutableArray *m_sizeArray;
    NSMutableDictionary *m_btnDic1;
    NSMutableDictionary *m_btnDic;
}
@property (nonatomic,strong) UIView *p_sizeView;
@property (nonatomic,strong) UIImageView *p_proImageView;
@property (nonatomic,strong) UILabel *p_proNameLbl;
@property (nonatomic,strong) UILabel *p_proPriceLbl;
@property (nonatomic,strong) UILabel *p_proTypeLbl;
@property (nonatomic,strong) UITableView *p_sizeTableView;
@property (nonatomic,strong) UIButton *p_trueBtn;
@property (nonatomic,strong) ProductModel *p_sizePM;
@property (nonatomic,strong) NSMutableArray *p_sizeArray;
@property (nonatomic,strong) NSMutableDictionary *p_btnDic;
@end

@implementation NNSizeView
@synthesize p_sizeView = m_sizeView;
@synthesize p_proImageView = m_proImageView;
@synthesize p_proNameLbl = m_proNameLbl;
@synthesize p_proPriceLbl = m_proPriceLbl;
@synthesize p_proTypeLbl = m_proTypeLbl;
@synthesize p_sizeTableView = m_sizeTableView;
@synthesize p_trueBtn = m_trueBtn;
@synthesize p_sizePM = m_sizePM;
@synthesize p_sizeArray = m_sizeArray;
@synthesize p_btnDic = m_btnDic;
@synthesize p_nnSizeDelegate = m_nnSizeDelegate;

-(void)dealloc
{

}

-(id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self createSizeView:frame];
    }
    return self;
}

-(void)createSizeView:(CGRect)frame
{
    //1.设置显示区
    self.p_sizeView = [[UIView alloc]initWithFrame:CGRectMake(0, frame.size.height, kMainScreen_Width, 2*frame.size.height/3.0f)];
    m_sizeView.backgroundColor = [UIColor whiteColor];
    [self addSubview:m_sizeView];
    //2.商品对照数据视图
    self.p_proImageView = [[UIImageView alloc]initWithFrame:CGRectMake(10, 10, kImageHeight, kImageHeight)];
    m_proImageView.backgroundColor = LGraycolor;
    [m_sizeView addSubview:m_proImageView];
    self.p_proNameLbl = [[UILabel alloc]initWithFrame:CGRectMake(kImageHeight+20, 10, kMainScreen_Width-kImageHeight-30, 44)];
    m_proNameLbl.font = [NNCommonDeal getFont:16];
    m_proNameLbl.numberOfLines = 0;
    [m_sizeView addSubview:m_proNameLbl];
    self.p_proPriceLbl = [[UILabel alloc]initWithFrame:CGRectMake(kImageHeight+20, kImageHeight-12, kMainScreen_Width-kImageHeight-30, 22)];
    m_proPriceLbl.font = [NNCommonDeal getFont:16];
    m_proPriceLbl.textColor = Redcolor;
    [m_sizeView addSubview:m_proPriceLbl];
    //3.规格选择
    self.p_sizeTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, kImageHeight+20, kMainScreen_Width, m_sizeView.frame.size.height-kImageHeight-70) style:UITableViewStyleGrouped];
    m_sizeTableView.delegate = self;
    m_sizeTableView.dataSource = self;
    m_sizeTableView.backgroundColor = [UIColor whiteColor];
    m_sizeTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [m_sizeView addSubview:m_sizeTableView];
    //4.确定按钮
    self.p_trueBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    m_trueBtn.frame = CGRectMake(0, m_sizeView.frame.size.height-50, kMainScreen_Width, 50);
    m_trueBtn.backgroundColor = Redcolor;
    [m_trueBtn setTitle:@"确定" forState:UIControlStateNormal];
    [m_trueBtn addTarget:self action:@selector(trueBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [m_sizeView addSubview:m_trueBtn];
    
}

-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    UITouch *touch = [touches anyObject];
    CGPoint pt = [touch locationInView:self];
    
    if (!CGRectContainsPoint([m_sizeView frame], pt)) {
        [UIView animateWithDuration:0.2f animations:^{
            m_sizeView.frame = CGRectMake(0, self.frame.size.height, kMainScreen_Width, 2*self.frame.size.height/3.0f);
        } completion:^(BOOL finished) {
            if (m_nnSizeDelegate && [m_nnSizeDelegate respondsToSelector:@selector(hideSize:)]) {
                [m_nnSizeDelegate hideSize:nil];
            }
        }];
    }
}

#pragma mark - Data

-(void)refreshSizeData:(ProductModel *)productM
{
    self.p_sizePM = productM;
    [m_proImageView sd_setImageWithURL:[NSURL URLWithString:productM.m_productImgUrl] placeholderImage:nil];
    m_proNameLbl.text = productM.m_productName;
    m_proPriceLbl.text = [NSString stringWithFormat:@"¥%@",productM.m_productCost];
    
    [UIView animateWithDuration:0.2f animations:^{
        m_sizeView.frame = CGRectMake(0, self.frame.size.height/3.0f, kMainScreen_Width, 2*self.frame.size.height/3.0f);
    }];
    //数据封装数组包含字典
    self.p_sizeArray = [[NSMutableArray alloc]init];
    if (m_sizePM.m_colorArray.count>0) {
        //将颜色放入字典
        NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
        [dic setObject:m_sizePM.m_colorArray forKey:@"color"];
        [m_sizeArray addObject:dic];
    }
    if (m_sizePM.m_sizeArray.count>0) {
        //将尺寸放入字典
        NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
        [dic setObject:m_sizePM.m_sizeArray forKey:@"size"];
        [m_sizeArray addObject:dic];
    }
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
    [dic setObject:@"1" forKey:@"num"];
    [m_sizeArray addObject:dic];
    
    self.p_btnDic = [[NSMutableDictionary alloc]init];
    [m_sizeTableView reloadData];
}

-(void)trueBtnClick:(id)sender
{
    if (m_nnSizeDelegate && [m_nnSizeDelegate respondsToSelector:@selector(chooseProductSize:)]) {
        [m_nnSizeDelegate chooseProductSize:m_sizePM];
    }
}

#pragma mark - WareDetail TableView

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return m_sizeArray.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0.001f;
}

-(CGFloat)calculateHeight:(NSMutableArray *)array
{
    CGFloat colorHeight = 0.0f;
    if (array.count>0) {
        CGFloat count = array.count/4;
        if (count > 1) {
            colorHeight = kSizeHeight*count;
        }
        else{
            colorHeight = kSizeHeight;
        }
    }
    return colorHeight;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSMutableDictionary *dic = [m_sizeArray objectAtIndex:indexPath.row];
    NSInteger keyIndex = 2;
    for (NSString *key in dic.allKeys) {
        if ([key isEqualToString:@"color"]) {
            keyIndex = 0;
        }
        else if ([key isEqualToString:@"size"]) {
            keyIndex = 1;
        }
    }
    if (keyIndex == 0) {
        return [self calculateHeight:[dic objectForKey:@"color"]];
    }
    else if (keyIndex == 1) {
        return [self calculateHeight:[dic objectForKey:@"size"]];
    }
    else {
        return kSizeHeight;
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.001f;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *Size = @"SizeCell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:Size];
    
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:Size];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    NSMutableDictionary *dic = [m_sizeArray objectAtIndex:indexPath.row];
    NSString *key = [dic.allKeys firstObject];
//    if ([key isEqualToString:@"num"]) {
//        <#statements#>
//    }
    [cell addSubview:[self getSizeChooseView:cell.frame andData:dic]];
    return cell;
}

-(UIView *)getSizeChooseView:(CGRect)frame andData:(NSMutableDictionary *)dic
{
    UIView *chooseview = [[UIView alloc]initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
    [self createSizeChooseView:chooseview andDic:dic];
    return chooseview;
}

-(void)createSizeChooseView:(UIView *)chooseView andDic:(NSMutableDictionary *)dic
{
    NSMutableArray *arr = [dic.allValues firstObject];
    BOOL isColor = NO;
    BOOL isSize = NO;
    UILabel *colorLbl = [[UILabel alloc]initWithFrame:CGRectMake(10, 14, 32, 22)];
    for (NSString *key in dic.allKeys) {
        if ([key isEqualToString:@"color"]) {
            colorLbl.text = @"颜色";
            isColor = YES;
        }
        else if ([key isEqualToString:@"size"]){
            colorLbl.text = @"尺码";
            isSize = YES;
        }
    }
    colorLbl.font = [NNCommonDeal getFont:16];
    [chooseView addSubview:colorLbl];
    NSMutableArray *btnArr = [[NSMutableArray alloc]init];
    for (int i=0; i<arr.count; i++) {
        NSString *title = [arr objectAtIndex:i];
        UIButton *sizeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        sizeBtn.frame = CGRectMake(62+i%4*78, 10+i/4*36, 68, 30);
        if (isColor) {
            sizeBtn.tag = i+100;
        }else{
            sizeBtn.tag = i;
        }
        sizeBtn.titleLabel.font = [NNCommonDeal getFont:12];
        [sizeBtn setTitle:title forState:UIControlStateNormal];
        [sizeBtn setTitle:title forState:UIControlStateSelected];
        [sizeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [sizeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
        if (isColor) {
            if ([m_sizePM.m_currentColor isEqualToString:title]) {
                [sizeBtn setBackgroundColor:Redcolor];
                sizeBtn.selected = YES;
            }
            else{
                [sizeBtn setBackgroundColor:Graycolor];
                sizeBtn.selected = NO;
            }
        }
        else if (isSize) {
            if ([m_sizePM.m_currentSize isEqualToString:title]) {
                [sizeBtn setBackgroundColor:Redcolor];
                sizeBtn.selected = YES;
            }
            else{
                [sizeBtn setBackgroundColor:Graycolor];
                sizeBtn.selected = NO;
            }
        }

        [sizeBtn addTarget:self action:@selector(sizeSelect:) forControlEvents:UIControlEventTouchUpInside];
        sizeBtn.layer.masksToBounds = YES;
        sizeBtn.layer.cornerRadius = 5;
        [chooseView addSubview:sizeBtn];
        [btnArr addObject:sizeBtn];
    }
    if (isColor) {
        [m_btnDic setObject:btnArr forKey:@"colorBtn"];
    }
    if (isSize) {
        [m_btnDic setObject:btnArr forKey:@"sizeBtn"];
    }
}

-(void)sizeSelect:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    btn.selected = !btn.selected;

    if (btn.selected) {
        if (btn.tag>=100) {
            m_sizePM.m_currentColor = btn.titleLabel.text;
        }
        else{
            m_sizePM.m_currentSize = btn.titleLabel.text;
        }
        [btn setBackgroundColor:Redcolor];
    }
    else{
        if (btn.tag>=100) {
            m_sizePM.m_currentColor = @"";
        }
        else{
            m_sizePM.m_currentSize = @"";
        }
        [btn setBackgroundColor:Graycolor];
    }
    [self reloadSizeBtn:btn];
}

-(void)reloadSizeBtn:(UIButton *)btn
{
    NSMutableArray *list = nil;
    if (btn.tag>=100) {
        list = [m_btnDic objectForKey:@"colorBtn"];
    }
    else {
        list = [m_btnDic objectForKey:@"sizeBtn"];
    }
    
    for (UIButton *button in list) {
        if (button.tag != btn.tag) {
            button.selected = NO;
            [button setBackgroundColor:Graycolor];
        }
    }
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
