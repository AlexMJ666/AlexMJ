//
//  NNProductInfoView.m
//  NNMall
//
//  Created by shaoxu on 15/11/5.
//  Copyright © 2015年 shaoxu. All rights reserved.
//

#import "NNProductInfoView.h"
#import "NNProductDetailView.h"
#import <MJRefresh.h>
#import <SDCycleScrollView.h>
#import <SDWebImage/UIImageView+WebCache.h>

@interface NNProductInfoView ()<UIScrollViewDelegate,UITableViewDelegate,UITableViewDataSource,SDCycleScrollViewDelegate>
{
    UIScrollView        *m_productScrollView;
    UITableView         *m_productTableView;
    NNProductDetailView *m_productDetailView;
    SDCycleScrollView   *m_cycleView;
    
    ProductModel        *m_productModel;
}
@property (nonatomic,strong) IBOutlet UIScrollView  *p_productScrollView;
@property (nonatomic,strong) IBOutlet UITableView            *p_productTableView;
@property (nonatomic,strong) NNProductDetailView    *p_productDetailView;
@property (nonatomic,strong) SDCycleScrollView      *p_cycleView;
@property (nonatomic,strong) ProductModel           *p_productModel;
@end

@implementation NNProductInfoView
@synthesize p_productScrollView = m_productScrollView;
@synthesize p_productTableView  = m_productTableView;
@synthesize p_productDetailView = m_productDetailView;
@synthesize p_cycleView         = m_cycleView;
@synthesize p_productModel      = m_productModel;

-(void)dealloc
{

}

-(id)initWithCoder:(NSCoder *)aDecoder
{
    self = [super initWithCoder:aDecoder];
    if (self) {
        [self initProductTableView];
        [self initProductDetail];
    }
    return self;
}

-(void)initProductDetail
{
    self.p_productDetailView = [[NNProductDetailView alloc]initWithFrame:CGRectMake(0, kNAV_HEIGHT, kMainScreen_Width, kNAV_HEIGHT)];
}

-(void)initProductTableView
{
    self.p_productTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kMainScreen_Width, kNAV_HEIGHT) style:UITableViewStyleGrouped];
    m_productTableView.delegate = self;
    m_productTableView.dataSource = self;
    
}

-(void)initProduct
{
    [m_productScrollView addSubview:m_productTableView];
    [m_productScrollView addSubview:m_productDetailView];
    
    MJRefreshBackNormalFooter *footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [UIView animateWithDuration:0.0f animations:^{
            [m_productScrollView setContentOffset:CGPointMake(0, kNAV_HEIGHT) animated:YES];
            [m_productTableView.footer endRefreshing];
        }];
    }];
    [footer setTitle:@"继续拖动，查看图文详情" forState:MJRefreshStateIdle];
    [footer setTitle:@"继续拖动，查看图文详情" forState:MJRefreshStatePulling];
    [footer setTitle:@"继续拖动，查看图文详情" forState:MJRefreshStateRefreshing];
    footer.stateLabel.font = [NNCommonDeal getFont:12];
    self.p_productTableView.footer = footer;
    
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [UIView animateWithDuration:0.0f animations:^{
            [m_productScrollView setContentOffset:CGPointMake(0, 0) animated:YES];
            [m_productDetailView.p_productDetailTableView.header endRefreshing];
        }];
    }];
    [header setTitle:@"上拉，返回商品简介" forState:MJRefreshStateIdle];
    [header setTitle:@"松开，返回商品简介" forState:MJRefreshStatePulling];
    [header setTitle:@"松开，返回商品简介" forState:MJRefreshStateRefreshing];
    header.stateLabel.font = [NNCommonDeal getFont:12];
    header.lastUpdatedTimeLabel.hidden = YES;
    m_productDetailView.p_productDetailTableView.header = header;
}

#pragma mark - RefreshData
-(void)refreshProductInfoData:(ProductModel *)productM
{
    self.p_productModel = productM;
    [self createCycleView:@[productM.m_productImgUrl,productM.m_productImgUrl,productM.m_productImgUrl]];
    [m_productTableView reloadData];
}

-(void)createCycleView:(NSArray *)imageArray
{
    // 网络加载 --- 创建不带标题的图片轮播器
    if (!self.p_cycleView) {
        self.p_cycleView = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, 0, kMainScreen_Width, kMainScreen_Height/3.0f) imageURLStringsGroup:imageArray];
        m_cycleView.autoScroll = NO;
        m_cycleView.delegate = self;
        m_cycleView.pageControlAliment = SDCycleScrollViewPageContolAlimentRight;
        m_cycleView.pageControlStyle = SDCycleScrollViewPageContolStyleAnimated;
    }
    else{
        m_cycleView.imageURLStringsGroup = imageArray;
    }
}

- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index
{
    
}

#pragma mark - WareDetail TableView

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0) {
        return 4;
    }
    return 1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0) {
        return 330.0f;
    }
    return 10.0f;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            //计算名称高度
            return 62.0f;
        }
        else if(indexPath.row == 1){
            return 64.0f;
        }
        return 18.0f;
    }
    if (indexPath.section == 1 && indexPath.row == 0) {
        return 50.0f;
    }
    //计算商品简介高度
    return 115.0f;
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (section == 2) {
        return 49.0f;
    }
    return 0.001f;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (section == 0 && self.p_cycleView) {
        return m_cycleView;
    }
    return nil;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *ProductInfo = @"ProductInfoCell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:ProductInfo];
    
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:ProductInfo];
    }
    cell.separatorInset = UIEdgeInsetsMake(0, 0, 0, cell.bounds.size.width);
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            cell.textLabel.text = m_productModel.m_productName;
            cell.textLabel.font = [NNCommonDeal getFont:16];
        }
        else if (indexPath.row == 1){
            cell.textLabel.attributedText = [NNCommonDeal getOldPrice:m_productModel.m_productPrice andNewPrice:m_productModel.m_productCost];
        }
        else if(indexPath.row == 2){
            cell.textLabel.text = @"由暖暖商城发货并提供售后服务";
            cell.textLabel.font = [NNCommonDeal getFont:12];
        }
        else if(indexPath.row == 3){
            cell.textLabel.text = @"支持7天无理由退款";
            cell.textLabel.font = [NNCommonDeal getFont:12];
        }
    }
    else if (indexPath.section == 1){
        cell.textLabel.text = @"选择 规格";
        cell.textLabel.font = [NNCommonDeal getFont:16];
    }
    else if (indexPath.section == 2){
        cell.textLabel.text = @"商品简介：";
        cell.textLabel.font = [NNCommonDeal getFont:16];
    }
    return cell;
}



@end
