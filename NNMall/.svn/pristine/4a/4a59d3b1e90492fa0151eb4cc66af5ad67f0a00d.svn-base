//
//  NNSizeView.m
//  NNMall
//
//  Created by shaoxu on 15/11/16.
//  Copyright © 2015年 shaoxu. All rights reserved.
//

#import "NNSizeView.h"
#import <SDWebImage/UIImageView+WebCache.h>

#define kSizeHeight 60
#define kImageHeight 80

@interface NNSizeView ()<UITableViewDataSource,UITableViewDelegate>
{
    UIView      *m_sizeView;
    UIImageView *m_proImageView;
    UILabel     *m_proNameLbl;
    UILabel     *m_proPriceLbl;
    UILabel     *m_proTypeLbl;
    UITableView *m_sizeTableView;
    UIButton    *m_trueBtn;
    
    ProductModel *m_sizePM;
    NSMutableArray *m_sizeArray;
}
@property (nonatomic,strong) UIView *p_sizeView;
@property (nonatomic,strong) UIImageView *p_proImageView;
@property (nonatomic,strong) UILabel *p_proNameLbl;
@property (nonatomic,strong) UILabel *p_proPriceLbl;
@property (nonatomic,strong) UILabel *p_proTypeLbl;
@property (nonatomic,strong) UITableView *p_sizeTableView;
@property (nonatomic,strong) UIButton *p_trueBtn;
@property (nonatomic,strong) ProductModel *p_sizePM;
@property (nonatomic,strong) NSMutableArray *p_sizeArray;
@end

@implementation NNSizeView
@synthesize p_sizeView = m_sizeView;
@synthesize p_proImageView = m_proImageView;
@synthesize p_proNameLbl = m_proNameLbl;
@synthesize p_proPriceLbl = m_proPriceLbl;
@synthesize p_proTypeLbl = m_proTypeLbl;
@synthesize p_sizeTableView = m_sizeTableView;
@synthesize p_trueBtn = m_trueBtn;
@synthesize p_sizePM = m_sizePM;
@synthesize p_sizeArray = m_sizeArray;
@synthesize p_nnSizeDelegate = m_nnSizeDelegate;

-(void)dealloc
{

}

-(id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        [self createSizeView:frame];
    }
    return self;
}

-(void)createSizeView:(CGRect)frame
{
    //1.设置显示区
    self.p_sizeView = [[UIView alloc]initWithFrame:CGRectMake(0, frame.size.height, kMainScreen_Width, 2*frame.size.height/3.0f)];
    m_sizeView.backgroundColor = [UIColor whiteColor];
    [self addSubview:m_sizeView];
    //2.商品对照数据视图
    self.p_proImageView = [[UIImageView alloc]initWithFrame:CGRectMake(10, 10, kImageHeight, kImageHeight)];
    m_proImageView.backgroundColor = LGraycolor;
    [m_sizeView addSubview:m_proImageView];
    self.p_proNameLbl = [[UILabel alloc]initWithFrame:CGRectMake(kImageHeight+20, 10, kMainScreen_Width-kImageHeight-30, 44)];
    m_proNameLbl.font = [NNCommonDeal getFont:16];
    m_proNameLbl.numberOfLines = 0;
    [m_sizeView addSubview:m_proNameLbl];
    self.p_proPriceLbl = [[UILabel alloc]initWithFrame:CGRectMake(kImageHeight+20, kImageHeight-12, kMainScreen_Width-kImageHeight-30, 22)];
    m_proPriceLbl.font = [NNCommonDeal getFont:16];
    m_proPriceLbl.textColor = Redcolor;
    [m_sizeView addSubview:m_proPriceLbl];
    //3.规格选择
    self.p_sizeTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, kImageHeight+20, kMainScreen_Width, m_sizeView.frame.size.height-kImageHeight-70) style:UITableViewStyleGrouped];
    m_sizeTableView.delegate = self;
    m_sizeTableView.dataSource = self;
    m_sizeTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [m_sizeView addSubview:m_sizeTableView];
    //4.确定按钮
    self.p_trueBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    m_trueBtn.frame = CGRectMake(0, m_sizeView.frame.size.height-50, kMainScreen_Width, 50);
    m_trueBtn.backgroundColor = Redcolor;
    [m_trueBtn setTitle:@"确定" forState:UIControlStateNormal];
    [m_trueBtn addTarget:self action:@selector(trueBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [m_sizeView addSubview:m_trueBtn];
    
}

-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    UITouch *touch = [touches anyObject];
    CGPoint pt = [touch locationInView:self];
    
    if (!CGRectContainsPoint([m_sizeView frame], pt)) {
        [UIView animateWithDuration:0.2f animations:^{
            m_sizeView.frame = CGRectMake(0, self.frame.size.height, kMainScreen_Width, 2*self.frame.size.height/3.0f);
        } completion:^(BOOL finished) {
            if (m_nnSizeDelegate && [m_nnSizeDelegate respondsToSelector:@selector(hideSize:)]) {
                [m_nnSizeDelegate hideSize:nil];
            }
        }];
    }
}

#pragma mark - Data

-(void)refreshSizeData:(ProductModel *)productM
{
    self.p_sizePM = productM;
    [m_proImageView sd_setImageWithURL:[NSURL URLWithString:productM.m_productImgUrl] placeholderImage:nil];
    m_proNameLbl.text = productM.m_productName;
    m_proPriceLbl.text = [NSString stringWithFormat:@"¥%@",productM.m_productCost];
    
    [UIView animateWithDuration:0.2f animations:^{
        m_sizeView.frame = CGRectMake(0, self.frame.size.height/3.0f, kMainScreen_Width, 2*self.frame.size.height/3.0f);
    }];
    //数据封装数组包含字典
//    self.p_sizeArray = [[NSMutableArray alloc]init];
//    if (m_sizePM.m_colorArray.count>0) {
//        
//    }
//    NSMutableDictionary *dic
    
    [m_sizeTableView reloadData];
}

-(void)trueBtnClick:(id)sender
{
    if (m_nnSizeDelegate && [m_nnSizeDelegate respondsToSelector:@selector(chooseProductSize:)]) {
        [m_nnSizeDelegate chooseProductSize:m_sizePM];
    }
}

#pragma mark - WareDetail TableView

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 3;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0.001f;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0) {
        CGFloat colorHeight = 0.0f;
        if (m_sizePM.m_colorArray.count>0) {
            CGFloat count = m_sizePM.m_colorArray.count/4;
            if (count > 1) {
                colorHeight = kSizeHeight*count;
            }
            else{
                colorHeight = kSizeHeight;
            }
        }
        return colorHeight;
    }
    else if (indexPath.row == 1) {
        CGFloat sizeHeight = 0.0f;
        if (m_sizePM.m_sizeArray.count>0) {
            CGFloat count = m_sizePM.m_sizeArray.count/4;
            if (count > 1) {
                sizeHeight = kSizeHeight*count;
            }
            else{
                sizeHeight = kSizeHeight;
            }
        }
        return sizeHeight;
    }
    else{
        return kSizeHeight;
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.001f;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *Size = @"SizeCell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:Size];
    
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:Size];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    if (indexPath.row == 0) {
        [cell addSubview:[self getColor:cell.frame]];
    }
    else if (indexPath.row == 1) {
        [cell addSubview:[self getSize:cell.frame]];
    }
    else{
        
    }
    return cell;
}

-(UIView *)getColor:(CGRect)frame
{
    UIView *colorview = [[UIView alloc]initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
    
    if (m_sizePM.m_colorArray.count>0) {
        UILabel *colorLbl = [[UILabel alloc]initWithFrame:CGRectMake(10, 14, 32, 22)];
        colorLbl.text = @"颜色";
        colorLbl.font = [NNCommonDeal getFont:16];
        [colorview addSubview:colorLbl];
        
        for (int i=0; i<m_sizePM.m_colorArray.count; i++) {
            NSString *title = [m_sizePM.m_colorArray objectAtIndex:i];
            UIButton *colorBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            colorBtn.frame = CGRectMake(62+i%4*78, 8+i/4*40, 68, 34);
            colorBtn.tag = i;
            [colorBtn setTitle:title forState:UIControlStateNormal];
            [colorBtn setTitle:title forState:UIControlStateSelected];
            [colorBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
            [colorBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
            if ([m_sizePM.m_currentColor isEqualToString:title]) {
                [colorBtn setBackgroundColor:Redcolor];
                colorBtn.selected = YES;
            }
            else{
                [colorBtn setBackgroundColor:[UIColor whiteColor]];
                colorBtn.selected = NO;
            }
            [colorBtn addTarget:self action:@selector(colorSelect:) forControlEvents:UIControlEventTouchUpInside];
            colorBtn.layer.masksToBounds = YES;
            colorBtn.layer.cornerRadius = 5;
            colorBtn.layer.borderColor = [[UIColor blackColor]CGColor];
            colorBtn.layer.borderWidth = 1;
            [colorview addSubview:colorBtn];
        }
    }
    return colorview;
}

-(UIView *)getSize:(CGRect)frame
{
    UIView *sizeview = [[UIView alloc]initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
    if (m_sizePM.m_sizeArray.count>0) {
        UILabel *sizeLbl = [[UILabel alloc]initWithFrame:CGRectMake(10, 14, 32, 22)];
        sizeLbl.text = @"尺寸";
        sizeLbl.font = [NNCommonDeal getFont:16];
        [sizeview addSubview:sizeLbl];
        
        for (int i=0; i<m_sizePM.m_colorArray.count; i++) {
            NSString *title = [m_sizePM.m_colorArray objectAtIndex:i];
            UIButton *sizeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            sizeBtn.frame = CGRectMake(62+i%4*67, 8+i/4*40, 57, 34);
            sizeBtn.tag = i;
            [sizeBtn setTitle:title forState:UIControlStateNormal];
            [sizeBtn setTitle:title forState:UIControlStateSelected];
            [sizeBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
            [sizeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
            if ([m_sizePM.m_currentColor isEqualToString:title]) {
                [sizeBtn setBackgroundColor:Redcolor];
                sizeBtn.selected = YES;
            }
            else{
                [sizeBtn setBackgroundColor:[UIColor whiteColor]];
                sizeBtn.selected = NO;
            }
            [sizeBtn addTarget:self action:@selector(sizeSelect:) forControlEvents:UIControlEventTouchUpInside];
            sizeBtn.layer.masksToBounds = YES;
            sizeBtn.layer.cornerRadius = 5;
            sizeBtn.layer.borderColor = [[UIColor blackColor]CGColor];
            sizeBtn.layer.borderWidth = 1;
            [sizeview addSubview:sizeBtn];
        }
    }
    return sizeview;
}

-(void)colorSelect:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    btn.selected = !btn.selected;
    if (btn.selected) {
        m_sizePM.m_currentColor = btn.titleLabel.text;
        [btn setBackgroundColor:Redcolor];
    }
    else{
        m_sizePM.m_currentColor = @"";
        [btn setBackgroundColor:[UIColor whiteColor]];
    }
    
}

-(void)sizeSelect:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    btn.selected = !btn.selected;
    if (btn.selected) {
        m_sizePM.m_currentSize = btn.titleLabel.text;
        [btn setBackgroundColor:Redcolor];
    }
    else{
        m_sizePM.m_currentSize = @"";
        [btn setBackgroundColor:[UIColor whiteColor]];
    }
    
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/

@end
